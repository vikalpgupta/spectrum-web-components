/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
:host {
    --spectrum-slider-handle-size: var(
        --spectrum-slider-handle-size-medium
    ); /* .spectrum-Slider */
    --spectrum-slider-control-height: var(
        --spectrum-slider-control-height-medium
    );
    --spectrum-slider-bottom-to-handle: var(
        --spectrum-slider-bottom-to-handle-medium
    );
    --spectrum-slider-handle-border-radius: var(--spectrum-corner-radius-200);
    --spectrum-slider-handle-border-width-down: var(
        --spectrum-slider-handle-border-width-down-medium
    );
}
.spectrum-Slider--sizeS {
    --spectrum-slider-handle-size: var(
        --spectrum-slider-handle-size-small
    ); /* .spectrum-Slider--sizeS */
    --spectrum-slider-control-height: var(
        --spectrum-slider-control-height-small
    );
    --spectrum-slider-bottom-to-handle: var(
        --spectrum-slider-bottom-to-handle-small
    );
    --spectrum-slider-handle-border-radius: var(--spectrum-corner-radius-200);
    --spectrum-slider-handle-border-width-down: var(
        --spectrum-slider-handle-border-width-down-small
    );
    --spectrum-slider-label-margin-block-end: var(
        --spectrum-slider-label-margin-block-end-small
    );
}
.spectrum-Slider--sizeM {
    --spectrum-slider-handle-size: var(
        --spectrum-slider-handle-size-medium
    ); /* .spectrum-Slider--sizeM */
    --spectrum-slider-control-height: var(
        --spectrum-slider-control-height-medium
    );
    --spectrum-slider-bottom-to-handle: var(
        --spectrum-slider-bottom-to-handle-medium
    );
    --spectrum-slider-handle-border-radius: var(--spectrum-corner-radius-200);
    --spectrum-slider-handle-border-width-down: var(
        --spectrum-slider-handle-border-width-down-medium
    );
    --spectrum-slider-label-margin-block-end: var(
        --spectrum-slider-label-margin-block-end-medium
    );
}
.spectrum-Slider--sizeL {
    --spectrum-slider-handle-size: var(
        --spectrum-slider-handle-size-large
    ); /* .spectrum-Slider--sizeL */
    --spectrum-slider-control-height: var(
        --spectrum-slider-control-height-large
    );
    --spectrum-slider-bottom-to-handle: var(
        --spectrum-slider-bottom-to-handle-large
    );
    --spectrum-slider-handle-border-radius: calc(
        var(--spectrum-corner-radius-200) * 4
    );
    --spectrum-slider-handle-border-width-down: var(
        --spectrum-slider-handle-border-width-down-large
    );
    --spectrum-slider-label-margin-block-end: var(
        --spectrum-slider-label-margin-block-end-large
    );
}
.spectrum-Slider--sizeXL {
    --spectrum-slider-handle-size: var(
        --spectrum-slider-handle-size-extra-large
    ); /* .spectrum-Slider--sizeXL */
    --spectrum-slider-control-height: var(
        --spectrum-slider-control-height-extra-large
    );
    --spectrum-slider-bottom-to-handle: var(
        --spectrum-slider-bottom-to-handle-extra-large
    );
    --spectrum-slider-handle-border-radius: calc(
        var(--spectrum-corner-radius-200) * 4
    );
    --spectrum-slider-handle-border-width-down: var(
        --spectrum-slider-handle-border-width-down-extra-large
    );
    --spectrum-slider-label-margin-block-end: var(
        --spectrum-slider-label-margin-block-end-extra-large
    );
}
:host {
    --spectrum-slider-cjk-line-height: var(
        --spectrum-cjk-line-height-100
    ); /* .spectrum-Slider */
    --spectrum-slider-min-size: var(--spectrum-spacing-900);
    --spectrum-slider-height-size: var(--spectrum-component-height-100);
    --spectrum-slider-track-corner-radius: var(--spectrum-corner-radius-75);
    --spectrum-slider-label-margin-start: var(--spectrum-spacing-300);
    --spectrum-slider-handle-border-width: var(--spectrum-border-width-200);
    --spectrum-slider-handle-margin-left: calc(
        var(--spectrum-slider-handle-size) / -2
    );
    --spectrum-slider-controls-margin: calc(
        var(--spectrum-slider-handle-size) / 2
    );
    --spectrum-slider-track-margin-offset: calc(
        var(--spectrum-slider-controls-margin) * -1
    );
    --spectrum-slider-track-middle-handleoffset: calc(
        var(--spectrum-slider-handle-gap) + var(--spectrum-slider-handle-size) /
            2
    );
    --spectrum-slider-input-top-size: calc(
        var(--spectrum-slider-handle-size) / -2 / 4
    );
    --spectrum-slider-track-fill-thickness: var(
        --spectrum-slider-track-thickness
    );
    --spectrum-slider-tick-mark-width: var(--spectrum-border-width-200);
    --spectrum-slider-tick-mark-border-radius: 2px;
    --spectrum-slider-track-color-disabled: var(
        --spectrum-disabled-background-color
    );
    --spectrum-slider-track-fill-color-disabled: var(
        --spectrum-disabled-background-color
    );
    --spectrum-slider-handle-border-color-disabled: var(
        --spectrum-disabled-border-color
    );
    --spectrum-slider-label-text-color: var(
        --spectrum-neutral-content-color-default
    );
    --spectrum-slider-label-text-color-disabled: var(
        --spectrum-disabled-content-color
    );
    --spectrum-slider-tick-mark-color-disabled: var(
        --spectrum-disabled-background-color
    );
    --spectrum-slider-ramp-handle-border-color-active: var(--spectrum-gray-100);
    --spectrum-slider-input-left: calc(
        var(--spectrum-slider-handle-margin-left) / 4
    );
    --spectrum-slider-track-handleoffset: var(--spectrum-slider-handle-gap);
    --spectrum-slider-ramp-margin-top: 0;
    --spectrum-slider-range-track-reset: 0;
}
:host {
    display: block;
    min-block-size: var(
        --mod-slider-height-size,
        var(--spectrum-slider-height-size)
    );
    min-inline-size: var(
        --mod-slider-min-size,
        var(--spectrum-slider-min-size)
    );
    position: relative; /* .spectrum-Slider */
    -webkit-user-select: none;
    user-select: none;
    z-index: 1;
}
#controls {
    block-size: calc(
        var(--mod-slider-control-height, var(--spectrum-slider-control-height)) *
            2
    );
    box-sizing: border-box;
    display: inline-block; /* .spectrum-Slider-controls */
    inline-size: calc(
        100% -
            var(
                --mod-slider-controls-margin,
                var(--spectrum-slider-controls-margin)
            ) * 2
    );
    margin-block-end: var(
        --mod-slider-bottom-to-handle,
        var(--spectrum-slider-bottom-to-handle)
    );
    margin-inline-start: var(
        --mod-slider-controls-margin,
        var(--spectrum-slider-controls-margin)
    );
    position: relative;
    vertical-align: top;
    z-index: auto;
}
:host([variant='tick']) {
    margin-block-end: var(
        --mod-slider-control-height,
        var(--spectrum-slider-control-height)
    ); /* .spectrum-Slider--tick */
}
#fill,
.track {
    block-size: var(
        --mod-slider-track-fill-thickness,
        var(--spectrum-slider-track-fill-thickness)
    ); /* .spectrum-Slider-track,
   * .spectrum-Slider-fill */
    box-sizing: border-box;
    inset-block-start: calc(
        var(--mod-slider-height-size, var(--spectrum-slider-height-size)) / 2
    );
    inset-inline-end: auto;
    inset-inline-start: 0;
    margin-block-start: calc(
        var(--mod-slider-control-height, var(--spectrum-slider-control-height)) /
            -2
    );
    margin-inline-start: var(
        --mod-slider-track-margin-offset,
        var(--spectrum-slider-track-margin-offset)
    );
    padding-block: 0;
    padding-inline: 0
        var(--mod-slider-handle-gap, var(--spectrum-slider-handle-gap));
    pointer-events: none;
    position: absolute;
    z-index: 1;
}
#fill:before,
.track:before {
    block-size: 100%;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-end-radius: 0;
    border-start-start-radius: 0;
    content: ''; /* .spectrum-Slider-track:before,
   * .spectrum-Slider-fill:before */
    display: block;
}
.track:first-of-type:before {
    border-end-start-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    );
    border-start-start-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    ); /* .spectrum-Slider-track:first-of-type:before */
}
.track:last-of-type:before {
    border-end-end-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    );
    border-start-end-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    ); /* .spectrum-Slider-track:last-of-type:before */
}
.track ~ .track {
    inset-inline-end: var(
        --mod-slider-range-track-reset,
        var(--spectrum-slider-range-track-reset)
    );
    inset-inline-start: auto; /* .spectrum-Slider-track~.spectrum-Slider-track */
    margin-inline-end: var(
        --mod-slider-track-margin-offset,
        var(--spectrum-slider-track-margin-offset)
    );
    margin-inline-start: var(
        --mod-slider-range-track-reset,
        var(--spectrum-slider-range-track-reset)
    );
    padding-block: 0;
    padding-inline: var(
            --mod-slider-track-handleoffset,
            var(--spectrum-slider-track-handleoffset)
        )
        0;
}
:host([variant='range']) .track ~ .track {
    inset-inline-end: auto;
    inset-inline-start: auto;
    margin-inline: var(
        --mod-slider-range-track-reset,
        var(--spectrum-slider-range-track-reset)
    );
    padding-inline: var(
            --mod-slider-track-middle-handleoffset,
            var(--spectrum-slider-track-middle-handleoffset)
        )
        var(
            --mod-slider-track-middle-handleoffset,
            var(--spectrum-slider-track-middle-handleoffset)
        ); /* .spectrum-Slider--range .spectrum-Slider-track~.spectrum-Slider-track */
}
#fill {
    margin-inline-start: 0; /* .spectrum-Slider-fill */
    padding-block: 0;
    padding-inline: calc(
            var(
                    --mod-slider-controls-margin,
                    var(--spectrum-slider-controls-margin)
                ) +
                var(
                    --spectrum-slider-handle-gap,
                    var(--spectrum-slider-handle-gap)
                )
        )
        0;
}
.spectrum-Slider-fill--right {
    padding-block: 0; /* .spectrum-Slider-fill--right */
    padding-inline: 0
        calc(
            var(
                    --mod-slider-controls-margin,
                    var(--spectrum-slider-controls-margin)
                ) +
                var(
                    --spectrum-slider-handle-gap,
                    var(--spectrum-slider-handle-gap)
                )
        );
}
:host([variant='range']) #value {
    -webkit-user-select: text;
    user-select: text;
}
:host([variant='range']) .track:first-of-type {
    inset-inline-end: auto;
    inset-inline-start: var(
        --mod-slider-range-track-reset,
        var(--spectrum-slider-range-track-reset)
    );
    margin-inline-start: var(
        --mod-slider-track-margin-offset,
        var(--spectrum-slider-track-margin-offset)
    );
    padding-inline: 0
        var(
            --mod-slider-track-handleoffset,
            var(--spectrum-slider-track-handleoffset)
        ); /* .spectrum-Slider--range .spectrum-Slider-track:first-of-type */
}
:host([variant='range']) .track:first-of-type:before {
    border-end-start-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    );
    border-start-start-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    ); /* .spectrum-Slider--range .spectrum-Slider-track:first-of-type:before */
}
:host([variant='range']) .track:last-of-type {
    inset-inline-end: var(
        --mod-slider-range-track-reset,
        var(--spectrum-slider-range-track-reset)
    );
    inset-inline-start: auto;
    margin-inline-end: var(
        --mod-slider-track-margin-offset,
        var(--spectrum-slider-track-margin-offset)
    );
    padding-inline: var(--spectrum-slider-track-handleoffset) 0; /* .spectrum-Slider--range .spectrum-Slider-track:last-of-type */
}
:host([variant='range']) .track:last-of-type:before {
    border-end-end-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    );
    border-start-end-radius: var(
        --mod-slider-track-corner-radius,
        var(--spectrum-slider-track-corner-radius)
    ); /* .spectrum-Slider--range .spectrum-Slider-track:last-of-type:before */
}
#ramp {
    block-size: var(
        --spectrum-slider-ramp-track-height,
        var(--spectrum-slider-ramp-track-height)
    );
    inset-inline-end: var(
        --spectrum-slider-track-margin-offset,
        var(--spectrum-slider-track-margin-offset)
    );
    inset-inline-start: var(
        --spectrum-slider-track-margin-offset,
        var(--spectrum-slider-track-margin-offset)
    );
    margin-block-start: var(
        --spectrum-slider-ramp-margin-top,
        var(--spectrum-slider-ramp-margin-top)
    ); /* .spectrum-Slider-ramp */
    position: absolute;
}
:host([dir='rtl']) #ramp svg {
    transform: matrix(-1, 0, 0, 1, 0, 0);
}
#ramp svg {
    block-size: 100%;
    inline-size: 100%; /* .spectrum-Slider-ramp svg */
}
.handle {
    block-size: var(
        --mod-slider-handle-size,
        var(--spectrum-slider-handle-size)
    );
    border-radius: var(
        --mod-slider-handle-border-radius,
        var(--spectrum-slider-handle-border-radius)
    );
    border-style: solid;
    border-width: var(
        --mod-slider-handle-border-width,
        var(--spectrum-slider-handle-border-width)
    );
    box-sizing: border-box;
    display: inline-block;
    inline-size: var(
        --mod-slider-handle-size,
        var(--spectrum-slider-handle-size)
    );
    inset-block-start: calc(
        var(--spectrum-slider-control-height) / 2 -
            var(--spectrum-slider-bottom-to-handle) +
            var(
                --mod-slider-margin-top-offset,
                var(--spectrum-slider-margin-top-offset)
            )
    );
    inset-inline-start: 0;
    margin-block: 0;
    margin-block-end: var(
        --mod-slider-bottom-to-handle,
        var(--spectrum-slider-bottom-to-handle)
    );
    margin-inline: calc(
            var(--mod-slider-handle-size, var(--spectrum-slider-handle-size)) /
                -2
        )
        0;
    outline: none;
    position: absolute; /* .spectrum-Slider-handle */
    transition: border-width
        var(
            --mod-animation-duration-100,
            var(--spectrum-animation-duration-100)
        )
        ease-in-out;
    z-index: 2;
}
.handle.dragging,
.handle.handle-highlight,
.handle:active {
    border-width: var(
        --mod-slider-handle-border-width-down,
        var(--spectrum-slider-handle-border-width-down)
    ); /* .spectrum-Slider-handle:active,
   * .spectrum-Slider-handle.is-focused,
   * .spectrum-Slider-handle.is-dragged */
}
.handle.dragging,
.handle.handle-highlight,
.handle.is-tophandle,
.handle:active {
    z-index: 3;
}
.handle:before {
    block-size: var(
        --mod-slider-handle-size,
        var(--spectrum-slider-handle-size)
    );
    border-radius: 100%;
    content: ' ';
    display: block;
    inline-size: var(
        --mod-slider-handle-size,
        var(--spectrum-slider-handle-size)
    );
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    transition: box-shadow
            var(
                --mod-animation-duration-100,
                var(--spectrum-animation-duration-100)
            )
            ease-out,
        inline-size
            var(
                --mod-animation-duration-100,
                var(--spectrum-animation-duration-100)
            )
            ease-out,
        block-size
            var(
                --mod-animation-duration-100,
                var(--spectrum-animation-duration-100)
            )
            ease-out;
}
.handle.handle-highlight:before {
    block-size: calc(
        var(--mod-slider-handle-size, var(--spectrum-slider-handle-size)) +
            var(--mod-focus-indicator-gap, var(--spectrum-focus-indicator-gap)) *
            2
    );
    inline-size: calc(
        var(--mod-slider-handle-size, var(--spectrum-slider-handle-size)) +
            var(--mod-focus-indicator-gap, var(--spectrum-focus-indicator-gap)) *
            2
    ); /* .spectrum-Slider-handle.is-focused:before */
}
.input {
    -webkit-appearance: none;
    block-size: var(
        --mod-slider-handle-size,
        var(--spectrum-slider-handle-size)
    );
    border: 0;
    cursor: default;
    inline-size: var(
        --mod-slider-handle-size,
        var(--spectrum-slider-handle-size)
    );
    inset-block-start: var(
        --mod-slider-input-top-size,
        var(--spectrum-slider-input-top-size)
    );
    inset-inline-start: var(
        --mod-slider-input-left,
        var(--spectrum-slider-input-left)
    );
    margin: 0; /* .spectrum-Slider-input */
    opacity: 0.000001;
    overflow: hidden;
    padding: 0;
    pointer-events: none;
    position: absolute;
}
.input:focus {
    outline: none;
}
#label-container {
    --slider-label-baseline-margin: calc(
        var(--spectrum-line-height-100) * var(--spectrum-font-size-75) -
            var(--spectrum-font-size-75)
    );
    display: flex; /* .spectrum-Slider-labelContainer */
    font-size: var(--mod-font-size-75, var(--spectrum-font-size-75));
    inline-size: auto;
    line-height: var(--mod-line-height-100, var(--spectrum-line-height-100));
    margin-block-end: calc(
        var(
                --mod-spectrum-slider-label-margin-block-end,
                var(--spectrum-slider-label-margin-block-end)
            ) * -1 -
            var(
                --mod-label-baseline-margin,
                var(--slider-label-baseline-margin)
            )
    );
    padding-block-start: var(
        --mod-component-top-to-text-75,
        var(--spectrum-component-top-to-text-75)
    );
    position: relative;
}
#label-container:lang(ja),
#label-container:lang(ko),
#label-container:lang(zh) {
    line-height: var(
        --mod-slider-cjk-line-height,
        var(--spectrum-slider-cjk-line-height)
    ); /* .spectrum-Slider-labelContainer:lang(ja),
   * .spectrum-Slider-labelContainer:lang(zh),
   * .spectrum-Slider-labelContainer:lang(ko) */
}
#label {
    flex-grow: 1;
    padding-inline-start: 0; /* .spectrum-Slider-label */
}
#value {
    font-feature-settings: 'tnum';
    cursor: default;
    flex-grow: 0; /* .spectrum-Slider-value */
    margin-inline-start: var(
        --mod-slider-label-margin-start,
        var(--spectrum-slider-label-margin-start)
    );
    padding-inline-end: 0;
    text-align: end; /* .spectrum-Slider-value */
}
:host([variant='tick']) #controls {
    margin-block-start: calc(
        var(--spectrum-text-to-visual-75) -
            var(
                --mod-slider-tick-mark-height,
                var(--spectrum-slider-tick-mark-height)
            ) / 2 -
            var(
                --mod-slider-track-thickness,
                var(--spectrum-slider-track-thickness)
            ) / 2
    ); /* .spectrum-Slider--tick .spectrum-Slider-controls */
}
:host([variant='tick']) .tickLabel {
    margin-block-start: calc(
        var(
                --mod-slider-tick-mark-height,
                var(--spectrum-slider-tick-mark-height)
            ) / 2 +
            var(
                --mod-slider-track-thickness,
                var(--spectrum-slider-track-thickness)
            ) / 2 + var(--spectrum-text-to-visual-75)
    ); /* .spectrum-Slider--tick .spectrum-Slider-tickLabel */
}
.ticks {
    display: flex;
    justify-content: space-between;
    margin-inline: var(
        --mod-slider-track-margin-offset,
        var(--spectrum-slider-track-margin-offset)
    );
    z-index: 0;
}
.ticks ~ .spectrum-Slider-handleContainer .handle {
    background: var(
        --mod-slider-ticks-handle-background-color,
        var(--spectrum-slider-ticks-handle-background-color)
    ); /* .spectrum-Slider-ticks~.spectrum-Slider-handleContainer .spectrum-Slider-handle */
}
.tick {
    inline-size: var(
        --mod-slider-tick-mark-width,
        var(--spectrum-slider-tick-mark-width)
    );
    position: relative; /* .spectrum-Slider-tick */
    top: calc(
        var(
                --mod-slider-tick-mark-height,
                var(--spectrum-slider-tick-mark-height)
            ) / 2 -
            var(
                --mod-slider-track-thickness,
                var(--spectrum-slider-track-thickness)
            ) / 2
    );
}
.tick:after {
    block-size: var(
        --mod-slider-tick-mark-height,
        var(--spectrum-slider-tick-mark-height)
    );
    border-radius: var(
        --mod-slider-tick-mark-border-radius,
        var(--spectrum-slider-tick-mark-border-radius)
    );
    content: '';
    display: block; /* .spectrum-Slider-tick:after */
    inline-size: var(
        --mod-slider-tick-mark-width,
        var(--spectrum-slider-tick-mark-width)
    );
    inset-block-start: 0;
    inset-inline-start: calc(
        50% -
            var(
                --mod-slider-tick-mark-width,
                var(--spectrum-slider-tick-mark-width)
            ) / 2
    );
    position: absolute;
}
.tick .tickLabel {
    align-items: center;
    display: flex; /* .spectrum-Slider-tick .spectrum-Slider-tickLabel */
    font-size: var(--mod-font-size-75, var(--spectrum-font-size-75));
    justify-content: center;
    line-height: var(--mod-line-height-100, var(--spectrum-line-height-100));
}
.tick:first-of-type .tickLabel,
.tick:last-of-type .tickLabel {
    display: block; /* .spectrum-Slider-tick:first-of-type .spectrum-Slider-tickLabel,
   * .spectrum-Slider-tick:last-of-type .spectrum-Slider-tickLabel */
    margin-inline: 0;
    position: absolute;
}
.tick:first-of-type {
    inset-inline-start: calc(
        var(
                --mod-slider-tick-mark-width,
                var(--spectrum-slider-tick-mark-width)
            ) / -2
    ); /* .spectrum-Slider-tick:first-of-type */
}
.tick:first-of-type .tickLabel {
    inset-inline-start: 0; /* .spectrum-Slider-tick:first-of-type .spectrum-Slider-tickLabel */
}
.tick:last-of-type {
    inset-inline-end: calc(
        var(
                --mod-slider-tick-mark-width,
                var(--spectrum-slider-tick-mark-width)
            ) / -2
    ); /* .spectrum-Slider-tick:last-of-type */
}
.tick:last-of-type .tickLabel {
    inset-inline-end: 0; /* .spectrum-Slider-tick:last-of-type .spectrum-Slider-tickLabel */
}
:host([disabled]) {
    cursor: default;
}
:host([disabled]) .handle {
    cursor: default;
    pointer-events: none;
}
:host([disabled]) .tickLabel {
    color: var(
        --highcontrast-slider-label-text-color-disabled,
        var(
            --mod-slider-label-text-color-disabled,
            var(--spectrum-slider-label-text-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-tickLabel */
}
.spectrum-Slider-handleContainer,
.spectrum-Slider-trackContainer {
    inline-size: calc(
        100% + var(--spectrum-slider-handle-size)
    ); /* .spectrum-Slider-handleContainer,
   * .spectrum-Slider-trackContainer */
    inset-block-start: 0;
    margin-inline-start: calc(var(--spectrum-slider-handle-size) / 2 * -1);
    position: absolute;
}
.spectrum-Slider-trackContainer {
    block-size: var(
        --mod-slider-height-size,
        var(--spectrum-slider-height-size)
    ); /* .spectrum-Slider-trackContainer */
    overflow: hidden;
}
.track:before {
    background: var(
        --highcontrast-slider-track-color,
        var(--mod-slider-track-color, var(--spectrum-slider-track-color))
    ); /* .spectrum-Slider-track:before */
}
#label-container {
    color: var(
        --highcontrast-slider-label-text-color,
        var(
            --mod-slider-label-text-color,
            var(--spectrum-slider-label-text-color)
        )
    ); /* .spectrum-Slider-labelContainer */
}
:host([variant='filled']) .track:first-child:before {
    background: var(
        --highcontrast-slider-track-fill-color,
        var(
            --mod-slider-track-fill-color,
            var(--spectrum-slider-track-fill-color)
        )
    ); /* .spectrum-Slider--filled .spectrum-Slider-track:first-child:before */
}
#fill:before {
    background: var(
        --highcontrast-slider-track-fill-color,
        var(
            --mod-slider-track-fill-color,
            var(--spectrum-slider-track-fill-color)
        )
    ); /* .spectrum-Slider-fill:before */
}
#ramp path {
    fill: var(
        --highcontrast-slider-ramp-track-color,
        var(
            --mod-slider-ramp-track-color,
            var(--spectrum-slider-ramp-track-color)
        )
    ); /* .spectrum-Slider-ramp path */
}
.handle {
    background: var(
        --highcontrast-slider-handle-background-color,
        var(
            --mod-slider-handle-background-color,
            var(--spectrum-slider-handle-background-color)
        )
    );
    border-color: var(
        --highcontrast-slider-handle-border-color,
        var(
            --mod-slider-handle-border-color,
            var(--spectrum-slider-handle-border-color)
        )
    ); /* .spectrum-Slider-handle */
}
.handle:hover {
    border-color: var(
        --highcontrast-slider-handle-border-color-hover,
        var(
            --mod-slider-handle-border-color-hover,
            var(--spectrum-slider-handle-border-color-hover)
        )
    ); /* .spectrum-Slider-handle:hover */
}
.handle.handle-highlight {
    border-color: var(
        --highcontrast-slider-handle-border-color-key-focus,
        var(
            --mod-slider-handle-border-color-key-focus,
            var(--spectrum-slider-handle-border-color-key-focus)
        )
    ); /* .spectrum-Slider-handle.is-focused */
}
.handle.handle-highlight:before {
    box-shadow: 0 0 0 var(--spectrum-focus-indicator-thickness)
        var(
            --highcontrast-slider-handle-focus-ring-color-key-focus,
            var(
                --mod-slider-handle-focus-ring-color-key-focus,
                var(--spectrum-slider-handle-focus-ring-color-key-focus)
            )
        ); /* .spectrum-Slider-handle.is-focused:before */
}
.handle.dragging,
.handle:active {
    border-color: var(
        --highcontrast-slider-handle-border-color-down,
        var(
            --mod-slider-handle-border-color-down,
            var(--spectrum-slider-handle-border-color-down)
        )
    ); /* .spectrum-Slider-handle:active,
   * .spectrum-Slider-handle.is-dragged */
}
:host([variant='ramp']) .handle {
    background: var(
        --mod-slider-ramp-handle-background-color,
        var(--spectrum-slider-ramp-handle-background-color)
    );
    box-shadow: 0 0 0 var(--spectrum-slider-handle-gap)
        var(
            --highcontrast-slider-ramp-handle-border-color-active,
            var(
                --mod-sectrum-slider-ramp-handle-border-color-active,
                var(--spectrum-slider-ramp-handle-border-color-active)
            )
        ); /* .spectrum-Slider--ramp .spectrum-Slider-handle */
}
@media (forced-colors: active) {
    :host([variant='ramp']) .handle {
        background-color: ButtonFace;
        border-color: ButtonText;
        box-shadow: 0 0 0 var(--spectrum-slider-handle-gap) ButtonFace;
        forced-color-adjust: none;
    }
}
.input {
    background: none;
}
.tick:after {
    background-color: var(
        --highcontrast-slider-tick-mark-color,
        var(
            --mod-slider-tick-mark-color,
            var(--spectrum-slider-tick-mark-color)
        )
    ); /* .spectrum-Slider-tick:after */
}
.handle.dragging {
    background: var(
        --highcontrast-slider-handle-background-color,
        var(
            --mod-slider-handle-background-color,
            var(--spectrum-slider-handle-background-color)
        )
    );
    border-color: var(
        --highcontrast-slider-handle-border-color-down,
        var(
            --mod-slider-handle-border-color-down,
            var(--spectrum-slider-handle-border-color-down)
        )
    ); /* .spectrum-Slider-handle.is-dragged */
}
:host([variant='range']) .track:not(:first-of-type):not(:last-of-type):before {
    background: var(
        --highcontrast-slider-track-fill-color,
        var(
            --mod-slider-track-fill-color,
            var(--spectrum-slider-track-fill-color)
        )
    ); /* .spectrum-Slider--range .spectrum-Slider-track:not(:first-of-type):not(:last-of-type):before */
}
:host([disabled]) #label-container {
    color: var(
        --highcontrast-slider-label-text-color-disabled,
        var(
            --mod-slider-label-text-color-disabled,
            var(--spectrum-slider-label-text-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-labelContainer */
}
:host([disabled]) .handle {
    background: var(
        --highcontrast-slider-handle-disabled-background-color,
        var(
            --mod-slider-handle-disabled-background-color,
            var(--spectrum-slider-handle-disabled-background-color)
        )
    );
    border-color: var(
        --highcontrast-slider-handle-border-color-disabled,
        var(
            --mod-slider-handle-border-color-disabled,
            var(--spectrum-slider-handle-border-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-handle */
}
:host([disabled]) .handle:active,
:host([disabled]) .handle:hover {
    background: var(
        --highcontrast-slider-handle-background-color-disabled,
        var(
            --mod-slider-handle-background-color-disabled,
            var(--spectrum-slider-handle-background-color-disabled)
        )
    );
    border-color: var(
        --highcontrast-disabled-border-color,
        var(--mod-disabled-border-color, var(--spectrum-disabled-border-color))
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-handle:hover,
   * .spectrum-Slider.is-disabled .spectrum-Slider-handle:active */
}
:host([disabled]) .track:before {
    background: var(
        --highcontrast-slider-track-color-disabled,
        var(
            --mod-slider-track-color-disabled,
            var(--spectrum-slider-track-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-track:before */
}
:host([disabled][variant='filled']) .track:first-child:before {
    background: var(
        --highcontrast-slider-track-fill-color-disabled,
        var(
            --mod-slider-track-fill-color-disabled,
            var(--spectrum-slider-track-fill-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled.spectrum-Slider--filled .spectrum-Slider-track:first-child:before */
}
:host([disabled]) #fill:before {
    background: var(
        --highcontrast-slider-track-fill-color-disabled,
        var(
            --mod-slider-track-fill-color-disabled,
            var(--spectrum-slider-track-fill-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-fill:before */
}
@media (forced-colors: active) {
    :host([disabled]) #ramp + .handle {
        fill: ButtonFace;
        background-color: ButtonFace;
    }
}
:host([disabled]) #ramp path {
    fill: var(
        --highcontrast-slider-ramp-track-color-disabled,
        var(
            --mod-slider-ramp-track-color-disabled,
            var(--spectrum-slider-ramp-track-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-ramp path */
}
:host([disabled]) .tick:after {
    background-color: var(
        --highcontrast-slider-tick-mark-color-disabled,
        var(
            --mod-slider-tick-mark-color-disabled,
            var(--spectrum-slider-tick-mark-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled .spectrum-Slider-tick:after */
}
:host([disabled][variant='range'])
    .track:not(:first-of-type):not(:last-of-type):before {
    background: var(
        --highcontrast-slider-track-color-disabled,
        var(
            --mod-slider-track-color-disabled,
            var(--spectrum-slider-track-color-disabled)
        )
    ); /* .spectrum-Slider.is-disabled.spectrum-Slider--range .spectrum-Slider-track:not(:first-of-type):not(:last-of-type):before */
}
@media (forced-colors: active) {
    :host {
        --highcontrast-slider-track-color: ButtonText;
        --highcontrast-slider-track-fill-color: ButtonText;
        --highcontrast-slider-ramp-track-color: ButtonText;
        --highcontrast-slider-ramp-track-color-disabled: GrayText;
        --highcontrast-slider-tick-mark-color: ButtonText;
        --spectrum-slider-track-color: ButtonText;
        --spectrum-slider-track-fill-color: ButtonText;
        --spectrum-slider-ramp-track-color: ButtonText;
        --spectrum-slider-ramp-track-color-disabled: GrayText;
        --spectrum-slider-handle-background-color: ButtonFace;
        --spectrum-slider-handle-background-color-disabled: GrayText;
        --spectrum-slider-handle-border-color: ButtonText;
        --spectrum-slider-handle-disabled-background-color: GrayText;
        --spectrum-slider-tick-mark-color: ButtonText;
        --spectrum-slider-tick-mark-color-disabled: GrayText;
        --spectrum-slider-handle-border-color-hover: Highlight;
        --spectrum-slider-handle-border-color-down: Highlight;
        --spectrum-slider-handle-border-color-key-focus: Highlight;
        --spectrum-slider-handle-focus-ring-color-key-focus: Highlight;
        --spectrum-slider-track-color-disabled: GrayText;
        --spectrum-slider-track-fill-color-disabled: GrayText;
        --spectrum-slider-handle-border-color-disabled: GrayText;
        --spectrum-slider-label-text-color: CanvasText;
        --spectrum-slider-label-text-color-disabled: GrayText;
        --spectrum-slider-ramp-handle-border-color-active: ButtonText;
    }
}
:host {
    --spectrum-slider-margin-top-offset: var(
        --system-spectrum-slider-margin-top-offset
    ); /* .spectrum-Slider */
    --spectrum-slider-track-color: var(--system-spectrum-slider-track-color);
    --spectrum-slider-track-fill-color: var(
        --system-spectrum-slider-track-fill-color
    );
    --spectrum-slider-ramp-track-color: var(
        --system-spectrum-slider-ramp-track-color
    );
    --spectrum-slider-ramp-track-color-disabled: var(
        --system-spectrum-slider-ramp-track-color-disabled
    );
    --spectrum-slider-handle-background-color: var(
        --system-spectrum-slider-handle-background-color
    );
    --spectrum-slider-handle-background-color-disabled: var(
        --system-spectrum-slider-handle-background-color-disabled
    );
    --spectrum-slider-ramp-handle-background-color: var(
        --system-spectrum-slider-ramp-handle-background-color
    );
    --spectrum-slider-ticks-handle-background-color: var(
        --system-spectrum-slider-ticks-handle-background-color
    );
    --spectrum-slider-handle-border-color: var(
        --system-spectrum-slider-handle-border-color
    );
    --spectrum-slider-handle-disabled-background-color: var(
        --system-spectrum-slider-handle-disabled-background-color
    );
    --spectrum-slider-tick-mark-color: var(
        --system-spectrum-slider-tick-mark-color
    );
    --spectrum-slider-handle-border-color-hover: var(
        --system-spectrum-slider-handle-border-color-hover
    );
    --spectrum-slider-handle-border-color-down: var(
        --system-spectrum-slider-handle-border-color-down
    );
    --spectrum-slider-handle-border-color-key-focus: var(
        --system-spectrum-slider-handle-border-color-key-focus
    );
    --spectrum-slider-handle-focus-ring-color-key-focus: var(
        --system-spectrum-slider-handle-focus-ring-color-key-focus
    );
}
